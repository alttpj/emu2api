<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.alttpj.emu2api</groupId>
  <artifactId>emu2api</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!-- JDK needed for compilation. Must be >= java.version. -->
    <jdk.version>11</jdk.version>
    <java.version>11</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>

    <!-- build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!--suppress UnresolvedMavenProperty -->
    <project.buildasset.dir>${maven.multiModuleProjectDirectory}/build-assets</project.buildasset.dir>
    <checkstyle.header.file>${project.buildasset.dir}/header.txt</checkstyle.header.file>

    <!-- 3rd party dependencies -->
    <dependency.immutables.version>2.8.8</dependency.immutables.version>

    <!-- test dependencies -->
    <dependency.groovy.version>3.0.6</dependency.groovy.version>
    <dependency.junit.version>5.7.1</dependency.junit.version>
  </properties>

  <modules>
    <module>utils/ulid</module>

    <module>event/api</module>
    <!-- <module>event/impl</module> -->

    <module>source/api</module>
    <module>source/retroarch</module>
    <!-- <module>source/sd2snes</module> -->

    <!--
    <module>endpoint/thrift</module>
    <module>endpoint/ws</module>
    -->

    <module>server/meecrowave</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- reactor modules -->
      <dependency>
        <groupId>io.github.alttpj.emu2api.utils</groupId>
        <artifactId>emu2api-utils-ulid</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.alttpj.emu2api.event</groupId>
        <artifactId>emu2api-event-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.alttpj.emu2api.source</groupId>
        <artifactId>emu2api-source-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.alttpj.emu2api.source</groupId>
        <artifactId>emu2api-source-retroarch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.alttpj.emu2api.server</groupId>
        <artifactId>emu2api-server-meecrowave</artifactId>
        <version>${project.version}</version>
      </dependency>


      <!-- 3rd party APIs -->
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value-annotations</artifactId>
        <version>${dependency.immutables.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- ee APIs / mp APIs -->
      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>3.0.0</version>
        <scope>provided</scope>
      </dependency>

      <!-- testing -->
      <!-- https://mvnrepository.com/artifact/org.junit/junit-bom -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${dependency.junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-bom</artifactId>
        <version>2.0-M5-groovy-3.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- forced dependencies -->
  <dependencies>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Mandatory dependencies for using Spock -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Optional dependencies for using Spock -->
    <!-- use a specific Groovy version rather than the one specified by spock-core -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <version>${dependency.groovy.version}</version>
    </dependency>
    <!-- enables mocking of classes (in addition to interfaces) -->
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.10.10</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.8.1</version>
          <configuration>
            <release>${maven.compiler.release}</release>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>

        <!-- creates coverage reports and coverage files. -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>

        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <version>3.1</version>
        </plugin>

        <plugin>
          <groupId>com.coveo</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>2.10</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.12.0</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <!-- forced invocation -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>

        <configuration>
          <!-- we use own executions for this. -->
          <proc>none</proc>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <useIncrementalCompilation>false</useIncrementalCompilation>
        </configuration>

        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <proc>only</proc>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.immutables</groupId>
                  <artifactId>value</artifactId>
                  <version>${dependency.immutables.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </execution>

          <execution>
            <id>generate-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <proc>only</proc>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.immutables</groupId>
                  <artifactId>value</artifactId>
                  <version>${dependency.immutables.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
        visit https://github.com/groovy/GMavenPlus/wiki -->
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <deployAtEnd>true</deployAtEnd>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jacoco-agent-ut</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <execution>
            <id>prepare-agent-it</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>

          <execution>
            <id>check-coverage</id>
            <!-- default phase is verify. -->
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <excludes>
                    <exclude>*Test</exclude>
                    <exclude>*IT</exclude>
                  </excludes>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>5%</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>

          <!-- the jacoco report needed for codecov.io. Generated in target/site/jacoco/. -->
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>

        <executions>
          <!-- enforce JDK version. -->
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- it actually means: JDK version. -->
                <requireJavaVersion>
                  <version>${jdk.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>

          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.5.2</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- check code style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${project.buildasset.dir}/checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>false</consoleOutput>
          <linkXRef>false</linkXRef>
          <propertyExpansion>project.buildasset.dir=${project.buildasset.dir}</propertyExpansion>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.38</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- forbid specific API calls. -->
      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>
        <configuration>
          <failOnUnsupportedJava>false</failOnUnsupportedJava>
          <targetVersion>${java.version}</targetVersion>
          <bundledSignatures>
            <!-- BOGUS: XXX: Workaround until 16 (and 17) is available -->
            <bundledSignature>jdk-unsafe-${maven.compiler.release}</bundledSignature>
            <bundledSignature>jdk-deprecated-${maven.compiler.release}</bundledSignature>
            <bundledSignature>jdk-internal-${maven.compiler.release}</bundledSignature>
            <!-- disallow undocumented classes like sun.misc.Unsafe: -->
            <bundledSignature>jdk-non-portable</bundledSignature>
            <bundledSignature>jdk-system-out</bundledSignature>
            <!-- don't allow unsafe reflective access: -->
            <bundledSignature>jdk-reflection</bundledSignature>
          </bundledSignatures>
          <signaturesFiles>
            <signaturesFile>${project.buildasset.dir}/forbiddenapis/java.util.txt</signaturesFile>
          </signaturesFiles>
          <suppressAnnotations>
            <suppressAnnotation>io.github.alttpj.memeforcehunt.app.cli.internal.SuppressForbidden
            </suppressAnnotation>
          </suppressAnnotations>
        </configuration>
        <executions>
          <execution>
            <id>forbiddenapis-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- format on build -->
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docs</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <maxmemory>1024m</maxmemory>
              <!-- do not show every java line -->
              <quiet>true</quiet>
              <serialwarn>true</serialwarn>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadoc</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>

    <profile>
      <id>run-its</id>
    </profile>
  </profiles>

  <licenses>
    <license>
      <name>Apache License v2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <inceptionYear>2021</inceptionYear>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub alttpj Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/alttpj/em2api</url>
    </repository>
    <snapshotRepository>
      <id>github</id>
      <name>GitHub alttpj Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/alttpj/emu2api</url>
    </snapshotRepository>
  </distributionManagement>

</project>
